create table t1 (f1 int primary key) engine=innodb;
create table t2 (f2 int primary key) engine=innodb;
create table t3 (f3 int primary key, foreign key (f3) references t2(f2)) engine=innodb;
insert into t1 values (1),(2),(3),(4),(5);
insert into t2 values (1),(2),(3),(4),(5);
insert into t3 values (1),(2),(3),(4),(5);
connect con1,localhost,root;
set debug_sync='alter_table_before_rename_result_table signal g1 wait_for g2';
alter table t2 add constraint foreign key (f2) references t1(f1) on delete cascade on update cascade;
connection default;
set debug_sync='before_execute_sql_command wait_for g1';
update t1 set f1 = f1 + 100000 limit 2;
connect con2,localhost,root;
kill query UPDATE;
disconnect con2;
connection default;
ERROR 70100: Query execution was interrupted
set debug_sync='now signal g2';
connection con1;
show create table t2;
Table	Create Table
t2	CREATE TABLE `t2` (
  `f2` int(11) NOT NULL,
  PRIMARY KEY (`f2`),
  CONSTRAINT `t2_ibfk_1` FOREIGN KEY (`f2`) REFERENCES `t1` (`f1`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci
disconnect con1;
connection default;
select * from t2 where f2 not in (select f1 from t1);
f2
select * from t3 where f3 not in (select f2 from t2);
f3
drop table t3;
drop table t2;
drop table t1;
set debug_sync='reset';
#
# MDEV-16060 - InnoDB: Failing assertion: ut_strcmp(index->name, key->name)
#
CREATE TABLE t1 (`pk` INT PRIMARY KEY) ENGINE=InnoDB;
CREATE TABLE t2 LIKE t1;
FLUSH TABLES;
SET debug_sync='alter_table_intermediate_table_created SIGNAL ready WAIT_FOR go';
ALTER TABLE t1 ADD FOREIGN KEY(pk) REFERENCES t2(pk) ON UPDATE CASCADE;
connect con1, localhost, root;
SET debug_sync='now WAIT_FOR ready';
SET lock_wait_timeout=0;
UPDATE t2 SET pk=10 WHERE pk=1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
PREPARE stmt FROM 'UPDATE t2 SET pk=10 WHERE pk=1';
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET debug_sync='now SIGNAL go';
connection default;
disconnect con1;
connection default;
SET debug_sync='reset';
SHOW OPEN TABLES FROM test;
Database	Table	In_use	Name_locked
DROP TABLE t1, t2;
#
# MDEV-30103 FK constraint fails upon referenced table eviction
#
create table t1 (a int, key(a), b int) engine=innodb;
create table t2 (a int references t1(a), key(a), b int) engine=innodb;
insert t1 values (1, 1);
set @save_evict_tables_debug = @@GLOBAL.innodb_evict_tables_on_commit_debug;
set global innodb_evict_tables_on_commit_debug=1;
begin;
insert t1 values (20000, 1);
connect bug, localhost, root;
set debug_sync="lock_fk_value_read signal read wait_for go";
insert t2 values(1,1);
connect purge, localhost, root;
FLUSH TABLES;
connection default;
set debug_sync="now wait_for read";
commit;
set debug_sync="now signal go";
connection bug;
connection default;
#
# Discard and load new table.
#
begin;
insert t1 values (30000, 1);
connection bug;
set debug_sync="lock_fk_value_read signal read wait_for go";
insert t2 values(1,1);
connection purge;
FLUSH TABLES;
connection default;
set debug_sync="now wait_for read";
commit;
# Load new table
select * from t1;
a	b
1	1
20000	1
30000	1
set debug_sync="now signal go";
connection bug;
connection default;
#
# Try to discard table after unsuccessful lock and load.
#
begin;
insert t1 values (40000, 1);
connection bug;
set debug_sync="lock_fk_value_read   signal read wait_for go1";
set debug_sync="lock_fk_table_loaded signal load wait_for go2";
insert t2 values(1,1);
connection purge;
FLUSH TABLES;
connection default;
set debug_sync="now wait_for read";
commit;
set debug_sync="now signal go1 wait_for load";
begin;
insert t1 values (50000, 1);
connection purge;
FLUSH TABLES;
connection default;
commit;
set debug_sync="now signal go2";
connection bug;
connection default;
# Cleanup
set debug_sync= reset;
set global innodb_evict_tables_on_commit_debug=@save_evict_tables_debug;
drop table t2, t1;
disconnect bug;
disconnect purge;
